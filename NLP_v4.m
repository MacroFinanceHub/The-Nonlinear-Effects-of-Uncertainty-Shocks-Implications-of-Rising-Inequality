% Title: Nonlinear VAR using Local Projections
% Objective: Quarterly VAR analysis to establish whether including
% inequality/distribution matters for aggregates.
% Author: Nisha Chikhale
% Date Created: 04/06/2020
% Date Modified: 04/20/2020
%% 
clc;
clear;
set(groot,'defaultLineLineWidth',2.0) % set line width thicker

%% Download data from FRED %%
% The sample in JKO is 1985-2018 quarterly, I do 1985-present quarterly
url = "https://fred.stlouisfed.org/";
c = fred(url);

series1 = "GDPC1"; % real GDP quarterly data
startdate1 = '09/01/1984'; 
enddate1 = '06/01/2019'; 

d1 = fetch(c,series1,startdate1,enddate1);
d2 = getFredData('PCE','1984-09-01','2019-06-01', [],'q'); 
d3 = getFredData('PAYEMS','1984-09-01','2019-06-01', [],'q'); 
d4 = getFredData('FEDFUNDS','1984-09-01','2019-06-01', [],'q'); 
d5 = getFredData('DGS10','1984-09-01','2019-06-01', [],'q');
d6 = getFredData('PCEND','1984-09-01','2019-06-01', [],'q');
d7 = getFredData('HOHWMN02USM065S','1984-09-01','2019-06-01', [],'q');
d8 = getFredData('UNRATE','1984-09-01','2019-06-01', [],'q');
d9 = getFredData('LNS12300060','1984-09-01','2019-06-01', [],'q');
d10 = getFredData('CE16OV','1984-09-01','2019-06-01', [],'q');
d11 = getFredData('GDPDEF','1984-09-01','2019-06-01', [],'q');
%fetch doesn't work when you need to change the frequency of data

gdpc1 = d1.Data(1:139,2);
N = size(gdpc1,1);
price = d2.Data(1:139,2);
emp = d3.Data(2:139,2);
empt1 = d3.Data(1:138,2);
hr = d7.Data(2:139,2);
hrt1 = d7.Data(1:138,2);
ur = d8.Data(2:139,2);
urt1 = d8.Data(1:138,2);
ep = d9.Data(2:139,2);
ept1 = d9.Data(1:138,2);
el = d10.Data(2:139,2);
elt1 = d10.Data(1:138,2);
ffr = d4.Data(2:139,2);
tyield = d5.Data(2:139,2);
nd = d6.Data(1:139,2);
def = d11.Data(2:139,2);
deft1 = d11.Data(1:138,2);

close(c)
%% Compute annualized GDP growth and inflation rate %%
gdpt = gdpc1(2:N,1);
gdpt1 = gdpc1(1:N-1,1);
yt = 400*log(gdpt./gdpt1); %annualized gdp growth
pcet = price(2:N,1);
pcet1 = price(1:N-1,1);
inft = 400*log(pcet./pcet1); %annualized inflation rate
ndt = nd(2:N,1);
ndt1 = nd(1:N-1,1);
%% Download Shadow rate data %%
%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: /Users/nishachikhale/Documents/MATLAB/ECON718/StateDependenceofAggUncertainty/RawData/shadowrate_US.xls
%    Worksheet: Sheet1
%
% Auto-generated by MATLAB on 20-Apr-2020 07:41:10

%% Setup the Import Options and import the data
opts = spreadsheetImportOptions("NumVariables", 3);

% Specify sheet and range
opts.Sheet = "Sheet1";
opts.DataRange = "A1:C363";

% Specify column names and types
opts.VariableNames = ["VarName1", "VarName2", "VarName3"];
opts.VariableTypes = ["double", "double", "double"];

% Import the data
shadowrateUS = readtable("/Users/nishachikhale/Documents/MATLAB/ECON718/StateDependenceofAggUncertainty/RawData/shadowrate_US.xls", opts, "UseExcel", false);


%% Clear temporary variables
clear opts
%1990q1:2020q1
srate = table2array(shadowrateUS(1:3:363,3));

%% Download JLN uncertainty data %%

%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: /Users/nishachikhale/Documents/Stata/Ludvigsondownload/MacroFinanceUncertainty_201908_update/MacroUncertaintyToCirculate.xlsx
%    Worksheet: Macro Uncertainty
%
% Auto-generated by MATLAB on 13-Mar-2020 12:57:22

%% Setup the Import Options and import the data
opts = spreadsheetImportOptions("NumVariables", 4);

% Specify sheet and range
opts.Sheet = "Macro Uncertainty";
opts.DataRange = "A2:D709";

% Specify column names and types
opts.VariableNames = ["Date", "h1", "h3", "h12"];
opts.VariableTypes = ["datetime", "double", "double", "double"];

% Specify variable properties
opts = setvaropts(opts, "Date", "InputFormat", "");

% Import the data
MacroUncertaintyToCirculate = readtable("/Users/nishachikhale/Documents/Stata/Ludvigsondownload/MacroFinanceUncertainty_201908_update/MacroUncertaintyToCirculate.xlsx", opts, "UseExcel", false);


%% Clear temporary variables
clear opts
%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: /Users/nishachikhale/Documents/Stata/Ludvigsondownload/MacroFinanceUncertainty_201908_update/FinancialUncertaintyToCirculate.xlsx
%    Worksheet: Financial Uncertainty
%
% Auto-generated by MATLAB on 13-Mar-2020 12:57:46

%% Setup the Import Options and import the data
opts = spreadsheetImportOptions("NumVariables", 4);

% Specify sheet and range
opts.Sheet = "Financial Uncertainty";
opts.DataRange = "A2:D709";

% Specify column names and types
opts.VariableNames = ["Date", "h1", "h3", "h12"];
opts.VariableTypes = ["datetime", "double", "double", "double"];

% Specify variable properties
opts = setvaropts(opts, "Date", "InputFormat", "");

% Import the data
FinancialUncertaintyToCirculate = readtable("/Users/nishachikhale/Documents/Stata/Ludvigsondownload/MacroFinanceUncertainty_201908_update/FinancialUncertaintyToCirculate.xlsx", opts, "UseExcel", false);


%% Clear temporary variables
clear opts
%% Create uncertainty variables %%
um_q = table2array(MacroUncertaintyToCirculate(295:3:708,3));%grab every 3rd element in 3rd column to get quarterly macro uncertainty at h=3
um1_q = table2array(MacroUncertaintyToCirculate(295:3:708,2)); %h=1
uf_q = table2array(FinancialUncertaintyToCirculate(295:3:708,3));
%% compute log of first differences of variables and annualize GDP, P and Emp
 x1 = (log(gdpt) - log(gdpt1))*400;
 x1_alt = (log(ndt) - log(ndt1))*400;
 x2 = (log(pcet) - log(pcet1))*400;
 x2_alt = (log(def) - log(deft1))*400;
 x3 = (log(emp) - log(empt1))*400;
 %x3_alt = (ur - urt1)*4;
 %x3_alt = (ep - ept1)*4;
 x3_alt = (log(el) - log(elt1))*400;
 x4 = ffr; %in levels
 x5 = tyield; %in levels

%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: /Users/nishachikhale/Documents/MATLAB/ECON718/StateDependenceofAggUncertainty/RawData/DFA_FRB/dfa-9050ratio-clean.xlsx
%    Worksheet: Sheet1
%
% Auto-generated by MATLAB on 21-Mar-2020 11:22:35

%% Setup the Import Options and import the data
opts = spreadsheetImportOptions("NumVariables", 8);

% Specify sheet and range
opts.Sheet = "Sheet1";
opts.DataRange = "A2:H123";

% Specify column names and types
opts.VariableNames = ["date1", "a", "b", "bottom", "year", "Q", "top", "ratio"];
opts.VariableTypes = ["string", "double", "double", "double", "double", "double", "double", "double"];

% Specify variable properties
opts = setvaropts(opts, "date1", "WhitespaceRule", "preserve");
opts = setvaropts(opts, "date1", "EmptyFieldRule", "auto");

% Import the data
dfa9050ratioclean = readtable("/Users/nishachikhale/Documents/MATLAB/ECON718/StateDependenceofAggUncertainty/RawData/DFA_FRB/dfa-9050ratio-clean.xlsx", opts, "UseExcel", false);


%% Clear temporary variables
clear opts
%% Create in sample 1989Q3:2019Q2 %%
um_q = table2array(MacroUncertaintyToCirculate(349:3:708,3)); 
um1_q = table2array(MacroUncertaintyToCirculate(349:3:708,2)); 
uf_q = table2array(FinancialUncertaintyToCirculate(349:3:708,3));
ratio = table2array(dfa9050ratioclean(1:120,8));
x1 = x1(19:138,1);
x1_alt = x1_alt(19:138,1);
x2 = x2(19:138,1);
x2_alt = x2_alt(19:138,1);
x3 = x3(19:138,1);
x3_alt = x3_alt(19:138,1);
x4 = x4(19:138,1);
x4_alt = [x4(1:2,1) ; srate(1:118,1)]; %appends effective funds rate to shadow rate for first 2 quarters in sample
x5 = x5(19:138,1);
data = [um_q x1 x1_alt x2 x3 x4_alt];
%% Create lagged state variable %%
state(1,1) = 0;
for i = 2:120
    if ratio(i-1,1) > 26.15 %26.15 is the median// 43.83 is the mean
        state(i,1) = 1 ;
    elseif ratio(i-1,1) <= 26.15
        state(i,1) = 0 ;
    end
end
 % note: basically first 60 quarters have state 0 and last 60 quarters have
 % state 1
 % This regime switching method requires we set a threshold. The IVAR
 % method does not.
%% State-dependent LP (see jko v5)%%
% parameters 
p = 1;  %number of lags
n = 6;  %number of vars 
N = length(um_q)-1; 
H = 12; %horizon
quarters = linspace(0,12,12);
%% Lag length selection %%
for i = 1:4
      Mdl = varm(n,p);
      Input = [data(i:N,1:n)];
      EstMdl = estimate(Mdl,Input);
      Results = summarize(EstMdl);
      BICtable(i) = Results.BIC;
      AICtable(i) = Results.AIC;
end
% note that the AIC and BIC continue to decrease as p grows. 
% In Nk models they typically use p = 3. (eg Basu and Bundick and Cacciatore and
% Ravennaz)
% Let the lag length be p = 1 for simplicity.
%% Compute IRFs via LP %%
%% IRFs via 13 OLS regressions
%use: um1_q = uncertainty at h=1 month ahead, x1 = gdp growth, x2_alt = gdp
%deflator for inflation, x1_alt = nondurable consumption growth, x3_alt =
%employment level growth, x4_alt = shadow federal funds rate

% Local projection
for i = 1:H+1 % 0 to H
  X1 = [state(1:N-i,1).*ones(N-i,1) (1-state(1:N-i,1)).*ones(N-i,1) state(1:N-i,1).*um1_q(1:N-i,1) (1-state(1:N-i,1)).*um1_q(1:N-i,1)] ; %shock
  X3 = [state(1:N-i,1).*ones(N-i,1) (1-state(1:N-i,1)).*ones(N-i,1) state(1:N-i,1).*um1_q(1:N-i,1) (1-state(1:N-i,1)).*um1_q(1:N-i,1) state(1:N-i,1).*x1(1:N-i,:) (1-state(1:N-i,1)).*x1(1:N-i,:)] ; 
  X4 = [state(1:N-i,1).*ones(N-i,1) (1-state(1:N-i,1)).*ones(N-i,1) state(1:N-i,1).*um1_q(1:N-i,1) (1-state(1:N-i,1)).*um1_q(1:N-i,1) state(1:N-i,1).*x1(1:N-i,:) (1-state(1:N-i,1)).*x1(1:N-i,:) state(1:N-i,1).*x2_alt(1:N-i,:) (1-state(1:N-i,1)).*x2_alt(1:N-i,:)] ;
  X5 = [state(1:N-i,1).*ones(N-i,1) (1-state(1:N-i,1)).*ones(N-i,1) state(1:N-i,1).*um1_q(1:N-i,1) (1-state(1:N-i,1)).*um1_q(1:N-i,1) state(1:N-i,1).*x1(1:N-i,:) (1-state(1:N-i,1)).*x1(1:N-i,:) state(1:N-i,1).*x2_alt(1:N-i,:) (1-state(1:N-i,1)).*x2_alt(1:N-i,:) state(1:N-i,1).*x1_alt(1:N-i,:) (1-state(1:N-i,1)).*x1_alt(1:N-i,:)] ;
  X6 = [state(1:N-i,1).*ones(N-i,1) (1-state(1:N-i,1)).*ones(N-i,1) state(1:N-i,1).*um1_q(1:N-i,1) (1-state(1:N-i,1)).*um1_q(1:N-i,1) state(1:N-i,1).*x1(1:N-i,:) (1-state(1:N-i,1)).*x1(1:N-i,:) state(1:N-i,1).*x2_alt(1:N-i,:) (1-state(1:N-i,1)).*x2_alt(1:N-i,:) state(1:N-i,1).*x1_alt(1:N-i,:) (1-state(1:N-i,1)).*x1_alt(1:N-i,:) state(1:N-i,1).*x3_alt(1:N-i,:) (1-state(1:N-i,1)).*x3_alt(1:N-i,:)] ;
  X7 = [state(1:N-i,1).*ones(N-i,1) (1-state(1:N-i,1)).*ones(N-i,1) state(1:N-i,1).*um1_q(1:N-i,1) (1-state(1:N-i,1)).*um1_q(1:N-i,1) state(1:N-i,1).*x1(1:N-i,:) (1-state(1:N-i,1)).*x1(1:N-i,:) state(1:N-i,1).*x2_alt(1:N-i,:) (1-state(1:N-i,1)).*x2_alt(1:N-i,:) state(1:N-i,1).*x1_alt(1:N-i,:) (1-state(1:N-i,1)).*x1_alt(1:N-i,:) state(1:N-i,1).*x3_alt(1:N-i,:) (1-state(1:N-i,1)).*x3_alt(1:N-i,:) state(1:N-i,1).*x4_alt(1:N-i,:) (1-state(1:N-i,1)).*x4_alt(1:N-i,:)] ;
  Y1 = [um1_q(i:N-1,:)]; 
  Y3 = [x1(i+1:N,:)];
  Y4 = [x2_alt(i+1:N,:)];
  Y5 = [x1_alt(i+1:N,:)];
  Y6 = [x3_alt(i+1:N,:)];
  Y7 = [x4_alt(i+1:N,:)];

    betaum(i,:)= X1\Y1; % record OLS estimators
    betax1(i,:)= X3\Y3;
    betax2(i,:)= X4\Y4;
    betax1alt(i,:)= X5\Y5;
    betax3(i,:)= X6\Y6;
    betax4(i,:)= X7\Y7;

end

% Normailize IRFs for state = 1 by size of the shock
% so that the IRFs capture the response of a 1% positive shock
IRF1_um = betaum(1,3)\betaum(:,3);%shock is 3rd in the matrix
IRF1_x1 = betaum(1,3)\betax1(:,3);
IRF1_x2 = betaum(1,3)\betax2(:,3);
IRF1_x1alt = betaum(1,3)\betax1alt(:,3);
IRF1_x3 = betaum(1,3)\betax3(:,3);
IRF1_x4 = betaum(1,3)\betax4(:,3);

% Normailize IRFs for state = 0 by size of the shock
%so that the IRFs capture the response of a 1% positive shock
IRF0_um = betaum(1,4)\betaum(:,4);%shock is 4th in the matrix
IRF0_x1 = betaum(1,4)\betax1(:,4);
IRF0_x2 = betaum(1,4)\betax2(:,4);
IRF0_x1alt = betaum(1,4)\betax1alt(:,4);
IRF0_x3 = betaum(1,4)\betax3(:,4);
IRF0_x4 = betaum(1,4)\betax4(:,4);


% smooth IRF to shocks
for i = 2:H
IRF0_um(i) = mean(IRF0_um(i-1:i+1));
IRF0_x1(i) = mean(IRF0_x1(i-1:i+1));
IRF0_x2(i) = mean(IRF0_x2(i-1:i+1));
IRF0_x1alt(i) = mean(IRF0_x1alt(i-1:i+1));
IRF0_x3(i) = mean(IRF0_x3(i-1:i+1));
IRF0_x4(i) = mean(IRF0_x4(i-1:i+1));

IRF1_um(i) = mean(IRF1_um(i-1:i+1));
IRF1_x1(i) = mean(IRF1_x1(i-1:i+1));
IRF1_x2(i) = mean(IRF1_x2(i-1:i+1));
IRF1_x1alt(i) = mean(IRF1_x1alt(i-1:i+1));
IRF1_x3(i) = mean(IRF1_x3(i-1:i+1));
IRF1_x4(i) = mean(IRF1_x4(i-1:i+1));

end

%% plot IRFS from NLP %%
%state = 0 
figure(1)
cla
plot(quarters, IRF0_um(1:12,1)) %macro uncertainty
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('% deviation macro uncertainty')
legend('Macro Uncertainty')
saveas(figure(1),[pwd '/plots/nlp/irf0_1_cons.png']);

figure(2)
cla
plot(quarters, IRF0_x1(1:12,1)) %GDP growth
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('% deviation GDP growth')
legend('GDP growth')
saveas(figure(2),[pwd '/plots/nlp/irf0_2_cons.png']);

figure(3)
cla
plot(quarters, IRF0_x2(1:12,1)) %inflation rate
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('% deviation Inflation')
legend('Inf')
saveas(figure(3),[pwd '/plots/nlp/irf0_3_cons.png']);

figure(4)
cla
plot(quarters, IRF0_x1alt(1:12,1)) %nondurable consumption growth
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('% deviation consumption growth')
legend('Non-durable consumption growth')
saveas(figure(4),[pwd '/plots/nlp/irf0_4_cons.png']);



figure(5)
cla
plot(quarters, IRF0_x3(1:12,1)) %employment rate
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('% deviation Employment')
legend('Emp')
saveas(figure(5),[pwd '/plots/nlp/irf0_5_cons.png']);

figure(6)
cla
plot(quarters, IRF0_x4(1:12,1)) %shadow rate
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('Shadow rate in levles')
legend('Shadow rate')
saveas(figure(6),[pwd '/plots/nlp/irf0_6_cons.png']);



%state = 1 
figure(8)
cla
plot(quarters, IRF1_um(1:12,1)) %macro uncertainty
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('% deviation macro uncertainty')
legend('Macro Uncertainty')
saveas(figure(8),[pwd '/plots/nlp/irf1_1_cons.png']);

figure(9)
cla
plot(quarters, IRF1_x1(1:12,1)) %GDP growth
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('% deviation GDP growth')
legend('GDP growth')
saveas(figure(9),[pwd '/plots/nlp/irf1_2_cons.png']);

figure(10)
cla
plot(quarters, IRF1_x2(1:12,1)) %inflation rate
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('% deviation Inflation')
legend('Inf')
saveas(figure(10),[pwd '/plots/nlp/irf1_3_cons.png']);


figure(11)
cla
plot(quarters, IRF1_x1alt(1:12,1)) %nondurable consumption growth
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('% deviation consumption growth')
legend('Non-durable consumption growth')
saveas(figure(11),[pwd '/plots/nlp/irf1_4_cons.png']);


figure(12)
cla
plot(quarters, IRF1_x3(1:12,1)) %employment rate
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('% deviation Employment')
legend('Emp')
saveas(figure(12),[pwd '/plots/nlp/irf1_5_cons.png']);

figure(13)
cla
plot(quarters, IRF1_x4(1:12,1)) %shadow rate
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('Shadow Rate in levels')
legend('Shadow Rate')
saveas(figure(13),[pwd '/plots/nlp/irf1_6_cons.png']);

%% plots for slides

figure(14)
cla
plot(quarters, IRF0_x1(1:12,1)) %GDP growth
hold on 
plot(quarters, IRF1_x1(1:12,1),'--') %GDP growth
ax.FontSize = 15;
title('GDP growth','fontsize',15)
xlabel('Time in quarters','fontsize',15)
ylabel('% deviation GDP growth','fontsize',15)
legend('low ineq.', 'high ineq.','fontsize',15)
saveas(figure(14),[pwd '/plots/nlp/comparison_gdp2.png']);


figure(15)
cla
plot(quarters, IRF0_x2(1:12,1)) %inflation rate
hold on
plot(quarters, IRF1_x2(1:12,1),'--') %inflation rate
ax.FontSize = 15; 
title('Inflation','fontsize',15)
xlabel('Time in quarters','fontsize',15)
ylabel('% deviation Inflation','fontsize',15)
legend('low ineq.', 'high ineq.','fontsize',15)
saveas(figure(15),[pwd '/plots/nlp/comparison_inf3.png']);

figure(16)
cla
plot(quarters, IRF0_x1alt(1:12,1)) %nondurable consumption growth
hold on 
plot(quarters, IRF1_x1alt(1:12,1),'--') %nondurable consumption growth
ax.FontSize = 15;
title('Nondurable consumption growth','fontsize',15)
xlabel('Time in quarters','fontsize',15)
ylabel('% deviation consumption growth','fontsize',15)
legend('low ineq.', 'high ineq.','fontsize',15)
saveas(figure(16),[pwd '/plots/nlp/comparison_c4.png']);

figure(17)
cla
plot(quarters, IRF0_x3(1:12,1)) %employment rate
hold on
plot(quarters, IRF1_x3(1:12,1),'--') %employment rate
ax.FontSize = 15;
title('Employment rate growth','fontsize',15)
xlabel('Time in quarters','fontsize',15)
ylabel('% deviation Employment','fontsize',15)
legend('low ineq.', 'high ineq.','fontsize',15)
saveas(figure(17),[pwd '/plots/nlp/comparison_emp5.png']);

figure(18)
cla
plot(quarters, IRF0_x4(1:12,1)) %shadow rate
hold on 
plot(quarters, IRF1_x4(1:12,1),'--') %shadow rate
ax.FontSize = 15;
title('Shadow rate','fontsize',15)
xlabel('Time in quarters','fontsize',15)
ylabel('Shadow rate in levles','fontsize',15)
legend('low ineq.', 'high ineq.','fontsize',15)
saveas(figure(18),[pwd '/plots/nlp/comparison_sr6.png']);

figure(19)
cla
plot(quarters, IRF0_um(1:12,1)) %macro uncertainty
hold on
plot(quarters, IRF1_um(1:12,1),'--') %macro uncertainty
ax.FontSize = 15;
title('Macro Uncertainty','fontsize',15)
xlabel('Time in quarters','fontsize',15)
ylabel('% deviation macro uncertainty','fontsize',15)
legend('low ineq.', 'high ineq.','fontsize',15)
saveas(figure(19),[pwd '/plots/nlp/comparison_um1.png']);

%%
holf off
%% I-VAR 3.0 with inequality (see jko v3)%%

%%To do an I-VAR analysis I need to use Bayesian methods to get GIRFs %%



N = size(ratio,1); %update N
int(:,1) = um_q(:,1).*ratio(:,1); %interaction term

% Report coefficients of the model %
Mdl3 = varm(n,p);
%Input3 = [um_q(p:N,1) int(p:N,1) x1(p:N,1) x2(p:N,1) x3(p:N,1) x4(p:N,1) x5(p:N,1) uf_q(p:N,1)]; 
Input3 = [um_q(p:N,1) int(p:N,1) x1(p:N,1).*int(p:N,1) x2(p:N,1).*int(p:N,1) x3(p:N,1).*int(p:N,1) x4(p:N,1).*int(p:N,1) x5(p:N,1).*int(p:N,1) uf_q(p:N,1).*int(p:N,1)]; 
%alternative:page 37 in http://elea.unisa.it/bitstream/handle/10556/3090/tesi%20M.%20Di%20Serio.pdf?sequence=1&isAllowed=y
EstMdl3 = estimate(Mdl3,Input3);  %note that there is no time trend in this model
Results3 = summarize(EstMdl3)
disp("VAR coefficients")
ARcoeffs3 = cell2mat(EstMdl3.AR) %estimates of phi_1 and phi_2 are in here 
const2 = EstMdl3.Constant; 
disp("VAR innovations")
sigma3 = EstMdl3.Covariance %estimates of the innovations to the VAR, e_t 

%% IRFs via Cholesky Decomposition %% 
%% VARir code from Ambrogio Cesa-Bianchi's site (https://sites.google.com/site/ambropo/matlab-examples) %%
Fcomp = [ARcoeffs3; eye((p-1)*n), zeros((p-1)*n,n)]
 %E = eig(Fcomp) : if eigen values of companion form have modulus less than
 %one VAR(p) is stable.
Finf_big = inv(eye(length(Fcomp))-Fcomp); % from the companion
        Finf = Finf_big(1:n,1:n);
        D  = chol(Finf*sigma3*Finf')'; % identification: u2 has no effect on y in the long run (innovation on uncertainty on GDP growth)
        invA = Finf\D;
%% call function below to compute the IRFs %%
IRF = IRFVAR(Fcomp, invA, p, 13); %calls the function below 

%% normalize IRFs to um shock %%
IRFn = IRF(1,1)\IRF(1:8,:);

%% Plot individual IRFs to um shock %%

figure(20)
cla
plot(quarters, IRFn(1,1:12)) %macro uncertainty
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('% deviation macro uncertainty')
legend('Macro Uncertainty')
saveas(figure(20),[pwd '/plots/nlp/irfum_1_cons.png']);

figure(21)
cla
plot(quarters, IRFn(2,1:12)) %interaction
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('% deviation 90/50 ratio * Macro uncertainty')
legend('Interaction')
saveas(figure(21),[pwd '/plots/nlp/irfum_2_cons.png']);

figure(22)
cla
plot(quarters, IRFn(3,1:12)) %gdp growth
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('% deviation GDP growth')
legend('GDP growth')
saveas(figure(22),[pwd '/plots/nlp/irfum_3_cons.png']);

figure(23)
cla
plot(quarters, IRFn(4,1:12)) %inflation rate
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('% deviation Inflation')
legend('Inf')
saveas(figure(23),[pwd '/plots/nlp/irfum_4_cons.png']);

figure(24)
cla
plot(quarters, IRFn(5,1:12)) %employment rate
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('% deviation Employment')
legend('Emp')
saveas(figure(24),[pwd '/plots/nlp/irfum_5_cons.png']);

figure(25)
cla
plot(quarters, IRFn(6,1:12)) %ffr
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('% deviation FFR')
legend('FFR')
saveas(figure(25),[pwd '/plots/nlp/irfum_6_cons.png']);

figure(26)
cla
plot(quarters, IRFn(7,1:12)) %tbill yield
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('% deviation Tbill yield')
legend('Tbill yield')
saveas(figure(26),[pwd '/plots/nlp/irfum_7_cons.png']);

figure(27)
cla
plot(quarters, IRFn(8,1:12)) %financial uncertainty
title('IRF: Response to a 1% Macro Uncertainty Shock')
xlabel('Time in quarters')
ylabel('% deviation financial uncertainty')
legend('Financial Uncertainty')
saveas(figure(27),[pwd '/plots/nlp/irfum_8_cons.png']);










%% IRFVAR function %%
function [IRF]=IRFVAR(A,A0inv,p,h)

q=size(A0inv,1);
J=[eye(q,q) zeros(q,q*(p-1))];
IRF=reshape(J*A^0*J'*A0inv,q^2,1);

for i =1:h
    IRF=([IRF reshape(J*A^i*J'*A0inv,q^2,1)]); %added a . before *A0inv
   
end
end 